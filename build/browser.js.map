{"version":3,"file":"browser.js","sources":["../src/index.ts","../src/browser/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\n\r\nexport async function fetchText(url: string, parameter?: RequestInit): Promise<string> {\r\n\treturn fetch(url, parameter)\r\n\t\t.then(response => response.text())\r\n}\r\n\r\nexport async function fetchJSON(url: string, parameter?: RequestInit): Promise<JSON> {\r\n\treturn fetch(url, parameter)\r\n\t\t.then(response => response.json())\r\n}\r\n\r\nexport async function fetchBlob(url: string, parameter?: RequestInit): Promise<Blob> {\r\n\treturn fetch(url, parameter)\r\n\t\t.then(response => response.blob())\r\n}\r\n\r\nexport async function fetchDocument(url: string, parameter?: RequestInit): Promise<Document> {\r\n\treturn fetch(url, parameter)\r\n\t\t.then(response => response.text())\r\n\t\t.then(strHtml => new DOMParser().parseFromString(strHtml, 'text/html'))\r\n}\r\n\r\n// export async function fetchGZip(url: string, parameter?: RequestInit) {\r\n// \treturn fetch(url, parameter)\r\n// \t\t.then(response => response.blob())\r\n// \t\t.then(data => new Response(data.stream().pipeThrough( new DecompressionStream('gzip') )))\r\n// }\r\n\r\n\r\nexport async function fetchOnlyResponseOk(url: string, parameter?: RequestInit): Promise<Response> {\r\n\treturn fetch(url, parameter)\r\n\t\t.then(response => {\r\n\t\t\tif (!response.ok) throw new Error(`[HTTP ${response.status}] The response isn't ok.`)\r\n\t\t\treturn response\r\n\t\t})\r\n}\r\n\r\nexport async function fetchInTime(url: string, parameter?: RequestInit, time = 5000): Promise<Response> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => reject(new Error('fetch overtime')), time)\r\n\t\tfetch(url, parameter)\r\n\t\t\t.then(resolve)\r\n\t\t\t.catch(reject)\r\n\t})\r\n}\r\n\r\nexport async function fetchAutoRetry(url: string, parameter?: RequestInit, times = 5, delay = 5000): Promise<Response> {\r\n\tconst sleep = (time: number) => new Promise(resolve => setTimeout(resolve, time))\r\n\treturn fetch(url, parameter)\r\n\t\t.catch(async (error) => {\r\n\t\t\tif (times <= 0) throw error\r\n\r\n\t\t\tawait sleep(delay)\r\n\t\t\treturn fetchAutoRetry(url, parameter, --times, delay)\r\n\t\t})\r\n}\r\n\r\n\r\nexport function combineSignals(signals: Array<AbortSignal>): AbortSignal {\r\n\tconst controller = new AbortController()\r\n  \r\n\tfor (const signal of signals) {\r\n\t\tif (signal.aborted) return signal\r\n    \r\n\t\tsignal.addEventListener(\r\n\t\t\t'abort',\r\n\t\t\t() => controller.abort(signal.reason), \r\n\t\t\t{ signal: controller.signal }\r\n\t\t)\r\n\t}\r\n  \r\n\treturn controller.signal\r\n}\r\n\r\n\r\n\r\n\r\nexport interface RequestConfig extends RequestInit {\r\n\tloadingTime?: number,\r\n\tretryTimes?: number,\r\n\tretryDelay?: number,\r\n\r\n\ttypeFrom?: '',\r\n\ttypeTo?: '' | 'text' | 'json' | 'blob' | 'document',\r\n\r\n\tisBadResponseError?: boolean,\r\n\tonError?: (error: any) => void,\r\n\tcontroller?: AbortController,\r\n}\r\nasync function joFetch(url: string, config: RequestConfig = {}): Promise<Response | string | JSON | Blob | Document> {\r\n\tinterface RequestParameter extends RequestInit {\r\n\t\tloadingTime: number,\r\n\t\tretryTimes: number,\r\n\t\tretryDelay: number,\r\n\t\r\n\t\ttypeFrom: '',\r\n\t\ttypeTo: '' | 'text' | 'json' | 'blob' | 'document',\r\n\t\r\n\t\tisBadResponseError: boolean,\r\n\t\tonError: (error: any) => void,\r\n\t\tcontroller: AbortController,\r\n\t}\r\n\tconst initialize = (config: RequestConfig): RequestParameter => {\r\n\t\treturn {\r\n\t\t\tloadingTime: 10000,\r\n\t\t\tretryTimes: 5,\r\n\t\t\tretryDelay: 5000,\r\n\r\n\t\t\ttypeFrom: '',\r\n\t\t\ttypeTo: '',\r\n\r\n\t\t\tisBadResponseError: false,\r\n\t\t\tonError: ((error: any) => { throw error }),\r\n\t\t\tcontroller: new AbortController(),\r\n\r\n\t\t\t...config\r\n\t\t}\r\n\t}\r\n\r\n\tconst combineSignals = (signals: Array<AbortSignal>): AbortSignal => {\r\n\t\tconst controller = new AbortController()\r\n      \r\n\t\tfor (const signal of signals) {\r\n\t\t\tif (signal.aborted) return signal\r\n        \r\n\t\t\tsignal.addEventListener(\r\n\t\t\t\t\"abort\",\r\n\t\t\t\t() => controller.abort(signal.reason), \r\n\t\t\t\t{ signal: controller.signal }\r\n\t\t\t)\r\n\t\t}\r\n      \r\n\t\treturn controller.signal\r\n\t}\r\n\tconst fetchInTime = async (url: string, parameter: RequestParameter, time: number): Promise<Response> => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst timeout = setTimeout(() => reject(new Error('fetch overtime')), time)\r\n\t\t\tparameter.signal = parameter.signal? combineSignals([parameter.controller.signal, parameter.signal]) : parameter.controller.signal;\r\n\t\t\tfetch(url, parameter)\r\n\t\t\t\t.then(resolve)\r\n\t\t\t\t.catch(reject)\r\n\t\t\t\t.finally(() => clearTimeout(timeout))\r\n\t\t})\r\n\t}\r\n\r\n\tconst processResponse = (response: Response) => {\r\n\t\tif (parameter.isBadResponseError && !response.ok) throw new Error(`[HTTP ${response.status}] The response isn't ok.`)\r\n\t\treturn response\r\n\t}\r\n\r\n\tconst sleep = (time: number) => new Promise(resolve => setTimeout(resolve, time))\r\n\tconst retryOnFailure = async (error: any) => {\r\n\t\tparameter.controller.abort()\r\n\t\tif (parameter.retryTimes-- <= 0) return parameter.onError(error)\r\n\r\n\t\tawait sleep(parameter.retryDelay)\r\n\t\treturn joFetch(url, parameter)\r\n\t}\r\n\r\n\tconst processDataType = (promise: Promise<any>) => {\r\n\t\tswitch (parameter.typeFrom) {\r\n\t\t// case 'gzip':\r\n\t\t// \tpromise = promise\r\n\t\t// \t\t.then(response => response.blob())\r\n\t\t// \t\t.then(data => new Response(data.stream().pipeThrough( new DecompressionStream('gzip') )))\r\n\t\t// \tbreak\r\n    \r\n\t\tcase '':\r\n\t\tdefault:\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tswitch (parameter.typeTo) {\r\n\t\tcase 'text':\r\n\t\t\tpromise = promise\r\n\t\t\t\t.then(response => response.text())\r\n\t\t\tbreak\r\n    \r\n\t\tcase 'json':\r\n\t\t\tpromise = promise\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\tbreak\r\n    \r\n\t\tcase 'blob':\r\n\t\t\tpromise = promise\r\n\t\t\t\t.then(response => response.blob())\r\n\t\t\tbreak\r\n    \r\n\t\tcase 'document':\r\n\t\t\tpromise = promise\r\n\t\t\t\t.then(response => response.text())\r\n\t\t\t\t.then(strHtml => new DOMParser().parseFromString(strHtml, 'text/html'))\r\n\t\t\tbreak\r\n                \r\n\t\tcase '':\r\n\t\tdefault:\r\n\t\t\tbreak\r\n\t\t}\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\tconst parameter = initialize(config)\r\n\treturn processDataType(\r\n\t\tfetchInTime(url, parameter, parameter.loadingTime)\r\n\t\t\t.then(processResponse)\r\n\t\t\t.catch(retryOnFailure)\r\n\t)\r\n}\r\nexport default joFetch","export * from \"../\";\r\n// Make the default export can be imported directly.\r\nimport joFetch from '../';\r\nexport default joFetch;\r\nexports = module.exports = joFetch;\r\n\r\n\r\nexport async function fetchGZip(url: string, parameter?: RequestInit): Promise<Response> {\r\n\treturn fetch(url, parameter)\r\n\t\t.then(response => response.blob())\r\n\t\t.then(data => new Response(data.stream().pipeThrough( new DecompressionStream('gzip') )))\r\n}"],"names":[],"mappings":"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"}